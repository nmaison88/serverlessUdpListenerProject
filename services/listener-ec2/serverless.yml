service: listener-ec2

plugins:
  - serverless-functions-base-path # this allows us to use the src directory structure which makes it easier in a monorepo

custom:
  functionsBasePath: src # this is where we tell it what dir to use

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${file(../../serverless.common.yml):stage} # stage is shared among all packages so we use the common.yml to set
  region: ${file(../../serverless.common.yml):region} # region is shared among all packages so we use the common.yml to set

environment:
  SQS_QUEUE: ${self:provider.stage}-${self:service}

resources:
  Resources:

    YourEC2Instance:
      Type: AWS::EC2::Instance
      Properties:
        ImageId: ami-013a129d325529d4d # this one is an us-west-2 image
        KeyName: ${env:EC2_KEY_NAME} # this is the .pem keyname you have, if you dont have it you need to create one first
        InstanceType: t2.micro
        IamInstanceProfile: !Ref InstanceProfile
        UserData:
          Fn::Base64: "${file(../../ec2Start.sh)}"
        # SubnetId: # if you have specific ones other than default, set here
        # SecurityGroupIds: # if you have specific ones other than default, set here

    InstanceProfile:
      Type: AWS::IAM::InstanceProfile
      Properties: 
        InstanceProfileName: ec2SqsPermissions-${self:provider.stage}
        Roles: 
          -  !Ref Ec2IamRoleForSqs

    Ec2IamRoleForSqs:
      Type: AWS::IAM::Role
      Properties:
        RoleName: ec2SqsPermissions-${self:provider.stage}
        AssumeRolePolicyDocument:
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - ec2.amazonaws.com
              Action:
                - sts:AssumeRole
        Policies:
          - PolicyName: sqsPolicies-${self:provider.stage}
            PolicyDocument:
              Statement:
                - Effect: Allow
                  Action:
                    - sqs:*
                  Resource:
                    - { Fn::ImportValue: '${self:provider.stage}:SqsQueueArn' }
                - Effect: Allow
                  Action:
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                    - ecr:*
                    - cloudtrail:LookupEvents 
                  Resource: '*'
